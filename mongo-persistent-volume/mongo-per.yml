apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongo-per
  name: mongo-per
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-per
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo-per
    spec:
      containers:
        - image: mongo:5.0
          name: mongo-per
          ports:
            - containerPort: 27017
          args: ["--dbpath","/data/db"]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-per-creds
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-per-creds
                  key: password
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "mongo-per-pvc"